from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message
from aiogram import types
import config
from queries import get_user_status_query
from queries import general_queries
from keyboards import chairmans_kb
from keyboards import scrutineer_kb
from keyboards import admins_kb
from queries import chairman_queries
from aiogram.fsm.context import FSMContext
from admin_moves import update_fttsar_judges
from aiogram.fsm.state import StatesGroup, State
from queries import scrutineer_queries
router = Router()
enter_pin_messages = {}


@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    await message.delete()
    await state.clear()
    text, status = await get_mes_menu(message)
    if status == 0:
        await message.answer(text, reply_markup=scrutineer_kb.scrutiner_chairman_mark)
    if status == 1:
        await message.answer(text, reply_markup=admins_kb.menu_kb)
    if status == 2:
        await message.answer(text, reply_markup=scrutineer_kb.menu_kb)
    if status == 3:
        await message.answer(text, reply_markup=chairmans_kb.menu_kb)

@router.message(Command("id"))
async def cmd_start(message: Message, state: FSMContext):
    await message.delete()
    await message.answer(f'üóìTelegram_id: <code>{message.from_user.id}</code>', parse_mode='HTML')




@router.callback_query(F.data == 'scrutiner_role')
async def cmd_start(callback: types.CallbackQuery):
    await callback.message.edit_text(f"üóìTelegram_id: <code>{callback.from_user.id}</code>\n\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ‚Ññ1", reply_markup=scrutineer_kb.back_mark, parse_mode='HTML')


@router.callback_query(F.data == 'chairman_role')
async def cmd_start(callback: types.CallbackQuery):
    await callback.message.edit_text(f'üóìTelegram_id: <code>{callback.from_user.id}</code>\n\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ‚Ññ2', reply_markup=scrutineer_kb.chairman_reg_mark, parse_mode='HTML')
    pass


class Chairman_reg_states(StatesGroup):
    firstState = State()

@router.callback_query(F.data == 'enter_chairaman_pin')
async def cmd_start(callback: types.CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥: ', reply_markup=scrutineer_kb.back_mark)
    enter_pin_messages[callback.from_user.id] = callback.message
    await state.set_state(Chairman_reg_states.firstState)

@router.message(Chairman_reg_states.firstState)
async def f2(message: Message, state: FSMContext):
    oldmessage = enter_pin_messages[message.from_user.id]
    try:
        pin = message.text
        if pin.isdigit():
            status = await scrutineer_queries.check_chairman_pin(message.from_user.id, int(pin), 0)
            if status == -1:
                await message.delete()
                await oldmessage.edit_text('‚ùå–û—à–∏–±–∫–∞', reply_markup=scrutineer_kb.back_mark)

            if status == 1:
                text, userstatus = await get_mes_menu(message)
                await message.delete()
                if userstatus == 3:
                    await oldmessage.edit_text(text, reply_markup=chairmans_kb.menu_kb)
                    await state.clear()

            if status == 0:
                await message.delete()
                await oldmessage.edit_text('‚ùå–û—à–∏–±–∫–∞. –ü–∏–Ω–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.', reply_markup=scrutineer_kb.back_mark)
        else:
            await message.delete()
            await oldmessage.edit_text('‚ùå–û—à–∏–±–∫–∞. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–∏–Ω–∫–æ–¥–∞.', reply_markup=scrutineer_kb.back_mark)
    except:
        pass

@router.callback_query(F.data == 'back_b')
async def cmd_start(callback: types.CallbackQuery, state: FSMContext):
    await state.clear()
    text, status = await get_cal_menu(callback)
    if status == 0:
        await callback.message.edit_text(text, reply_markup=scrutineer_kb.scrutiner_chairman_mark)
    if status == 1:
        await callback.message.edit_text(text, reply_markup=admins_kb.menu_kb)
    if status == 2:
        await callback.message.edit_text(text, reply_markup=scrutineer_kb.menu_kb)
    if status == 3:
        await callback.message.edit_text(text, reply_markup=chairmans_kb.menu_kb)


@router.message(Command("updateftsarrlist"))
async def update_ftsarr_judges_list(message: types.Message):
    access = [6887839538, 834140698, 363846616, 5824158064]
    if message.from_user.id in access:
        await message.answer('–ó–∞–ø—É—â–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö\n–ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è: 5 –º–∏–Ω.')
        status = await update_fttsar_judges.update_judges_list()
        if status == 1:
            await message.answer('–ü—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω')
        else:
            await message.answer('‚ùå–û—à–∏–±–∫–∞')


@router.message(Command("help"))
async def update_ftsarr_judges_list(message: types.Message):
    text = '''<b>–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:</b>\n/id - –ø–æ–ª—É—á–∏—Ç—å telegram_id, chairman/scrutineer\n\n/judges - –Ω–∞—á–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Å–ø–∏—Å–∫–∞ —Å—É–¥–µ–π, chairman/scrutineer\n\n/clean - —É–¥–∞–ª–∏—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≤–Ω—É—Ç—Ä–∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è, chairman/scrutineer\n\n/free - –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã—Ö –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–ø–∏—Å–∫–∞, chairman/scrutineer\n\n/updateftsarrlist - –æ–±–Ω–æ–≤–∏—Ç—å –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ —Å—É–¥–µ–π, –ú–∏—Ç—è1/–ú–∏—Ç—è2/–ê—Ä—Ç–µ–º1/–ê—Ä—Ç–µ–º2\n\n/delactive - —Å–Ω–µ—Å—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤—Å–µ–º —Å—É–¥—å—è–º –≤–Ω—É—Ç—Ä–∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è, chairman/scrutineer\n\n/cleancounter - –æ–±–Ω—É–ª–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ —Å—É–¥–µ–π—Å—Ç–≤ –≤ –≥—Ä—É–ø–ø–∞—Ö, chairman/scrutineer\n\n/change_generation_mode - –∏–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–æ–≤ –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–∏, chairman/scrutineer'''
    await message.answer(text, parse_mode='HTML')


async def get_cal_menu(callback: types.CallbackQuery):
    user_status = await get_user_status_query.get_user_status(callback.from_user.id)
    # –ê–¥–º–∏–Ω
    if user_status == 1:
        await callback.message.answer('üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ admin –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6', reply_markup=admins_kb.menu_kb)
        return 'üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ admin –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6', 1

    # scrutinner
    if user_status == 2:
        active_comp = await general_queries.get_CompId(callback.message.from_user.id)
        if await chairman_queries.del_unactive_comp(callback.message.from_user.id, active_comp) == 1:
            active_comp = None
        info = await general_queries.CompId_to_name(active_comp)
        return f"üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ scrutineer –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6\n\n/help - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n–ê–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ: {info}", 2

    # chairman
    if user_status == 3:
        active_comp = await general_queries.get_CompId(callback.message.from_user.id)
        if await chairman_queries.del_unactive_comp(callback.message.from_user.id, active_comp) == 1:
            active_comp = None
        info = await general_queries.CompId_to_name(active_comp)
        return f"üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ scrutineer –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6\n\n/help - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n–ê–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ: {info}", 3

    if user_status == 0:
        return "üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ —Å–∏—Å—Ç–µ–º–µ\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å:", 0

async def get_mes_menu(message: Message):
    user_status = await get_user_status_query.get_user_status(message.from_user.id)
    #–ê–¥–º–∏–Ω
    if user_status == 1:
        return 'üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ admin –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6', user_status

    #scrutinner
    if user_status == 2:
        active_comp = await general_queries.get_CompId(message.from_user.id)
        if await chairman_queries.del_unactive_comp(message.from_user.id, active_comp) == 1:
            active_comp = None
        info = await general_queries.CompId_to_name(active_comp)
        return f"üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ scrutineer –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6\n\n/help - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n–ê–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ: {info}", user_status
    #chairman
    if user_status == 3:
        active_comp = await general_queries.get_CompId(message.from_user.id)
        if await chairman_queries.del_unactive_comp(message.from_user.id, active_comp) == 1:
            active_comp = None
        info = await general_queries.CompId_to_name(active_comp)
        return f"üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ chairman –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6\n\n/judges - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—É–¥–µ–π\n/help - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n–ê–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ: {info}", 3
    if user_status == 0:
        return "üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ —Å–∏—Å—Ç–µ–º–µ\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å:", 0


